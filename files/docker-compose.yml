version: "3.7"
services:
  traefik:
    image: traefik
    command: [
      "--api",
      "--docker",
      "--docker.watch",
      "--docker.domain=smartnode.localhost",
    ]
    restart: always
    ports:
      - "9080:8080" # Web UI (enabled by --api)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      internal_net:
        aliases:
          - "eth1.rpc.smartnode.localhost"
          - "beacon.ws.smartnode.localhost"
  pow:
    image: ${POW_IMAGE}
    restart: on-failure
    volumes:
      - eth1clientdata:/ethclient
      - ./setup/pow:/setup:ro
    networks:
      - public_net
      - internal_net
    environment:
      - CLIENT=${POW_CLIENT}
      - NETWORKID=${POW_NETWORK_ID}
      - BOOTNODE=${POW_BOOTNODE}
      - ETHSTATSLABEL=${POW_ETHSTATS_LABEL}
      - ETHSTATSLOGIN=${POW_ETHSTATS_LOGIN}
    entrypoint: /setup/start.sh
    labels:
      - traefik.enable=true
      - traefik.port=8545
      - traefik.docker.network=${COMPOSE_PROJECT_NAME}_internal_net
      - traefik.frontend.priority=10
      - traefik.frontend.rule=Host:eth1.rpc.smartnode.localhost
      - traefik.backend.loadbalancer.stickiness=true
      - traefik.backend.loadbalancer.stickiness.cookieName=smartnodeEth1
      - traefik.backend.loadbalancer.method=drr
      - traefik.backend=eth1.rpc.smartnode
    depends_on:
      - traefik
  beacon:
    image: rocketpool/beacon-chain-simulator:v0.0.1
    restart: on-failure
    volumes:
      - eth2clientdata:/ethclient
    networks:
      - internal_net
    command: [
      "--powHost", "http://eth1.rpc.smartnode.localhost",
      "--depositContract", "0x81d6550DDf3aB1e4a1DC92c67b12E916C0fc75f4",
      "--withdrawalContract", "0xF23F62Ff1315FA629dAeCD550A6b45B772CA16BA",
      "--from", "0x2f6812e7005c61835b12544eeb45958099ef45f4",
      "--database", "/ethclient/beacon.json",
    ]
    labels:
      - traefik.enable=true
      - traefik.port=9545
      - traefik.docker.network=${COMPOSE_PROJECT_NAME}_internal_net
      - traefik.frontend.priority=10
      - traefik.frontend.rule=Host:beacon.ws.smartnode.localhost
      - traefik.backend.loadbalancer.stickiness=true
      - traefik.backend.loadbalancer.stickiness.cookieName=smartnodeBeacon
      - traefik.backend.loadbalancer.method=drr
      - traefik.backend=beacon.ws.smartnode
    depends_on:
      - traefik
  cli:
    image: rocketpool/smartnode-cli:v0.0.1
    restart: on-failure
    volumes:
      - ${RP_PATH}:/.rocketpool
    networks:
      - internal_net
    depends_on:
      - pow
    entrypoint: /bin/sh
    tty: true
  minipools:
    image: rocketpool/smartnode-minipools:v0.0.1
    restart: on-failure
    volumes:
      - ${RP_PATH}:/.rocketpool
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - internal_net
    command: [
      "${RP_PATH}",
      "rocketpool/smartnode-minipool:v0.0.1",
      "${COMPOSE_PROJECT_NAME}_minipool_",
      "${COMPOSE_PROJECT_NAME}_internal_net",
    ]
    depends_on:
      - pow
      - beacon
  node:
    image: rocketpool/smartnode-node:v0.0.1
    restart: on-failure
    volumes:
      - ${RP_PATH}:/.rocketpool
    networks:
      - internal_net
    depends_on:
      - pow
  watchtower:
    image: rocketpool/smartnode-watchtower:v0.0.1
    restart: on-failure
    volumes:
      - ${RP_PATH}:/.rocketpool
    networks:
      - internal_net
    depends_on:
      - pow
      - beacon
networks:
  public_net:
  internal_net:
    internal: true
volumes:
  eth1clientdata:
  eth2clientdata:
